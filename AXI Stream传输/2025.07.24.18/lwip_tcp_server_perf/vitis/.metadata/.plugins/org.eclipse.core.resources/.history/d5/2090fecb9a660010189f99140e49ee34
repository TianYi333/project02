#ifndef __AXI_DMA_APP_H_
#define __AXI_DMA_APP_H_

#include "xaxidma.h"
#include "xparameters.h"
#include "xil_exception.h"
#include "xscugic.h"
#include "platform_config.h"
#include "netif/xadapter.h"
#define DMA_DEV_ID          XPAR_AXIDMA_0_DEVICE_ID
#define RX_INTR_ID          XPAR_FABRIC_AXI_DMA_0_S2MM_INTROUT_INTR
#define INTC_DEVICE_ID      XPAR_SCUGIC_SINGLE_DEVICE_ID
#define DDR_BASE_ADDR       XPAR_PS7_DDR_0_S_AXI_BASEADDR   //0x00100000
#define MEM_BASE_ADDR       (DDR_BASE_ADDR + 0x1000000)     //0x01100000
#define TX_BUFFER_BASE      (MEM_BASE_ADDR + 0x00100000)    //0x01200000
#define RX_BUFFER_BASE      (MEM_BASE_ADDR + 0x00300000)    //0x01400000
#define RESET_TIMEOUT_COUNTER   10000    //复位时间
#define TEST_START_VALUE        0x0      //测试起始值
#define MAX_PKT_LEN             0x100    //发送包长度
extern XScuGic xInterruptController;

void ProcessReceivedData(u8 *Buffer, int length);
void tx_intr_handler(void *callback);
void rx_intr_handler(void *callback);
int InitDma(XAxiDma *AxiDmaPtr, u16 DeviceId);
int SetupInterruptSystem(XScuGic * int_ins_ptr, XAxiDma * axidma_ptr, u16 rx_intr_id);
void disable_intr_system(XScuGic * int_ins_ptr, u16 tx_intr_id, u16 rx_intr_id);
int AXI_DMA_APP(void);


#endif /* __AXI_DMA_APP_H_ */
